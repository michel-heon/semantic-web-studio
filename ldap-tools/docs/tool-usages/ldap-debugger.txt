Usage for ldap-debugger:

Intercept and decode LDAP communication.

Usage:  ldap-debugger {options}

Available options include:

  LDAP Connection and Authentication Arguments

    -h, --hostname {host}
        The IP address or resolvable name to use to connect to the directory
        server.  If this is not provided, then a default value of 'localhost'
        will be used.
    -p, --port {port}
        The port to use to connect to the directory server.  If this is not
        provided, then a default value of 389 will be used.
    -D, --bindDN {dn}
        The DN to use to bind to the directory server when performing simple
        authentication.
    -w, --bindPassword {password}
        The password to use to bind to the directory server when performing
        simple authentication or a password-based SASL mechanism.
    -j, --bindPasswordFile {path}
        The path to the file containing the password to use to bind to the
        directory server when performing simple authentication or a
        password-based SASL mechanism.
    --promptForBindPassword
        Indicates that the tool should interactively prompt the user for the
        bind password.
    -Z, --useSSL
        Use SSL when communicating with the directory server.
    -q, --useStartTLS
        Use StartTLS when communicating with the directory server.
    --defaultTrust
        Use the JVM's default trust store, and optionally an additional trust
        store specified using the --trustStorePath argument, to
        non-interactively determine whether to trust any certificate chain
        presented during TLS negotiation.  If the chain cannot be trusted based
        on any of those sources, then negotiation will fail without prompting
        about whether to trust it.
    -X, --trustAll
        Trust any certificate presented by the directory server.
    -K, --keyStorePath {path}
        The path to the file to use as the key store for obtaining client
        certificates when communicating securely with the directory server.
    -W, --keyStorePassword {password}
        The password to use to access the key store contents.
    -u, --keyStorePasswordFile {path}
        The path to the file containing the password to use to access the key
        store contents.
    --promptForKeyStorePassword
        Indicates that the tool should interactively prompt the user for the
        password to use to access the key store contents.
    --keyStoreFormat {format}
        The format (e.g., JKS, PKCS12, PKCS11, BCFKS, etc.) for the key store
        file.
    -P, --trustStorePath {path}
        The path to the file to use as trust store when determining whether to
        trust a certificate presented by the directory server.
    -T, --trustStorePassword {password}
        The password to use to access the trust store contents.
    -U, --trustStorePasswordFile {path}
        The path to the file containing the password to use to access the trust
        store contents.
    --promptForTrustStorePassword
        Indicates that the tool should interactively prompt the user for the
        password to use to access the trust store contents.
    --trustStoreFormat {format}
        The format (e.g., JKS, PKCS12, PKCS11, BCFKS, etc.) for the trust store
        file.
    -N, --certNickname {nickname}
        The nickname (alias) of the client certificate in the key store to
        present to the directory server for SSL client authentication.
    --enableSSLDebugging
        Enable Java's low-level support for debugging SSL/TLS communication.
        This is equivalent to setting the 'javax.net.debug' property to 'all'.
    -o, --saslOption {name=value}
        A name-value pair providing information to use when performing SASL
        authentication.
    --useSASLExternal
        Use the SASL EXTERNAL mechanism to authenticate.
    --helpSASL
        Provide information about the supported SASL mechanisms, including the
        properties available for use with each.

  Other Arguments

    -a, --listenAddress {address}
        The address on which to listen for client connections.  If this is not
        provided, then it will listen on all interfaces.
    -L, --listenPort {port}
        The port on which to listen for client connections.  If no value is
        provided, then a free port will be automatically selected.
    -S, --listenUsingSSL
        Use SSL when accepting client connections.  This is independent of the
        '--useSSL' option, which applies only to communication between the LDAP
        debugger and the backend server.  If this argument is provided, then
        either the --keyStorePath or the --generateSelfSignedCertificate
        argument must also be provided.
    --generateSelfSignedCertificate
        Generate a self-signed certificate to present to clients when the
        --listenUsingSSL argument is provided.  This argument cannot be used in
        conjunction with the --keyStorePath argument.
    -f, --outputFile {path}
        The path to the output file to be written.  If no value is provided,
        then the output will be written to standard output.
    -c, --codeLogFile {path}
        The path to the a code log file to be written.  If a value is provided,
        then the tool will generate sample code that corresponds to the
        requests received from clients.  If no value is provided, then no code
        log will be generated.

  Usage Arguments

    --interactive
        Launch the tool in interactive mode.
    -H, --help
        Display usage information for this program.
    -V, --version
        Display version information for this program.
    --propertiesFilePath {path}
        The path to a properties file used to specify default values for
        arguments not supplied on the command line.
    --generatePropertiesFile {path}
        Write an empty properties file that may be used to specify default
        values for arguments.
    --noPropertiesFile
        Do not obtain any argument values from a properties file.
    --suppressPropertiesFileComment
        Suppress output listing the arguments obtained from a properties file.

Examples

  Listen for client connections on port 1389 on all interfaces and forward any
  traffic received to server.example.com:389.  The decoded LDAP communication
  will be written to the /tmp/ldap-debugger.log log file.

    ldap-debugger --hostname server.example.com --port 389 --listenPort 1389 \
         --outputFile /tmp/ldap-debugger.log
